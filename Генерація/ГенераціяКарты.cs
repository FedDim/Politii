using Политiи.Данныя;

namespace Политiи.Генерація
{
    public static class ГенераціяКарты
    {
        public static int[,] ГенераціяМѣстности(int типъКарты)
        {
            int[,] картаМѣстности = new int[Дата.карта.Ширина, Дата.карта.Высота];

            float[,] картаВысотъ = ГенераціяВысотъ(типъКарты, Дата.карта.Ширина, Дата.карта.Высота);

            Эрозія(картаВысотъ);

            for (int y = 0; y < Дата.карта.Высота; y++)
            {
                for (int x = 0; x < Дата.карта.Ширина; x++)
                {
                    float число = картаВысотъ[x, y];

                    if (число < 0.1f) картаМѣстности[x, y] = 0;
                    else if (число < 0.9f) картаМѣстности[x, y] = 1;
                    else картаМѣстности[x, y] = 2;
                }
            }

            return картаМѣстности;
        }

        public static float[,] ГенераціяВысотъ(int типъКарты, int ширина, int высота)
        {
            float[,] картаВысотъ = new float[ширина, высота];

            Шумъ шумъ = new();
            Random random = new();

            float центръX = ширина / 2f, центръY = высота / 2f;

            for (int y = 0; y < высота; y++)
            {
                for (int x = 0; x < ширина; x++)
                {
                    float высотаШума = шумъ.МногократныйШумъ2Д(x / 20f, y / 20f, октавы: 4);
                    float разстояніеДоЦентра = MathF.Sqrt((x - центръX) * (x - центръX) +
                        (y - центръY) * (y - центръY));

                    switch (типъКарты)
                    {
                        case 0:
                            if (x < random.Next(2, 11) || x > ширина - random.Next(2, 11) || y < random.Next(2, 6) || y > высота - random.Next(2, 6))
                                картаВысотъ[x, y] = 0;
                            else
                            {
                                картаВысотъ[x, y] = высотаШума;
                                картаВысотъ[x, y] += Math.Max(0, 0.5f - разстояніеДоЦентра / (ширина / 2f));
                            }

                            break;
                        case 1:
                            картаВысотъ[x, y] = шумъ.МногократныйШумъ2Д(x / 5f, y / 5f, октавы: 6);
                            break;
                        case 2:
                            картаВысотъ[x, y] = высотаШума - разстояніеДоЦентра / 100f;
                            break;
                        case 3:
                            картаВысотъ[x, y] = высотаШума + (1f - MathF.Abs(x - центръX) / центръX) * 0.4f;
                            if (random.NextDouble() < 0.05)
                                картаВысотъ[x, y] += 0.3f;
                            break;
                        default:
                            картаВысотъ[x, y] = высотаШума;
                            break;
                    }
                }

            }

            return картаВысотъ;

        }

        public static void Эрозія(float[,] картаВысотъ, int капли = 50000, float скорость = 1.0f,
            float вмѣстимость = 5.0f, float коэффиціентъЭрозіи = 0.1f, float коэффиціентъОсажденія = 0.3f,
            int возможныеШаги = 100)
        {
            Random random = new();

            for (int i = 0; i < капли; i++)
            {
                int x = random.Next(Дата.карта.Ширина);
                int y = random.Next(Дата.карта.Высота);

                if (картаВысотъ[x, y] > 0.95f) continue;

                float вода = скорость;
                float матеріалъ = 0;

                for (int шагъ = 0; шагъ < возможныеШаги; шагъ++)
                {
                    int движеніеX = -1;
                    int движеніеY = -1;
                    float движеніеУклонъ = 0;

                    for (int dy = -1; dy <= 1; dy++)
                    {
                        for (int dx = -1; dx <= 1; dx++)
                        {
                            if (dx == 0 && dy == 0) continue;

                            int nx = x + dx;
                            int ny = y + dy;

                            if (nx >= 0 && nx < Дата.карта.Ширина && ny >= 0 && ny < Дата.карта.Высота)
                            {
                                float уклонъ = картаВысотъ[x, y] - картаВысотъ[nx, ny];

                                if (уклонъ > движеніеУклонъ)
                                {
                                    движеніеУклонъ = уклонъ;
                                    движеніеX = nx;
                                    движеніеY = ny;
                                }
                            }
                        }
                    }

                    if (движеніеX == -1 || движеніеY == -1 || движеніеУклонъ <= 0)
                    {
                        картаВысотъ[x, y] += матеріалъ * коэффиціентъОсажденія;
                        break;
                    }

                    x = движеніеX;
                    y = движеніеY;

                    float эрозія = Math.Min(движеніеУклонъ * коэффиціентъЭрозіи, вмѣстимость - матеріалъ);
                    картаВысотъ[x, y] -= эрозія;
                    матеріалъ += эрозія;

                    float осадокъ = матеріалъ * коэффиціентъОсажденія;
                    картаВысотъ[x, y] += осадокъ;
                    матеріалъ -= осадокъ;

                    вода *= 0.9f;
                    if (вода <= 0.01f) break;

                }
            }
        }
    }
}
